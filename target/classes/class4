양방향 매핑(아주 중요)
설계를 아주 잘 해야 한다
연관관계에 대한 고찰

객체와 테이블간의 관계맺는 방법은 다른 개념이다

"mappedBy"

테이블: 연관관계가 하나이면 된다.(방향키가 한개)
객체:  연관관계가 두개이어야 한다.(방향키가 두개)

객체 연관관계
회원 -> 팀
팀 -> 회원

테이블 연관관계
회원 <-> 팀

"객체의 양방향 관계는 사실 양방향 관계가 아니라 서로 다른 단방향 관계 2개이다."
"테이블은 외래 키 하나로 두 테이블의 연관관계를 관리"(SQL문 join보면 알 수 있다.)

객체 양방향 연관관계 맺을떄 주의!!(업테이트시 주의)
연관관계의 주인(Owner)
1, 객체의 두 관계중 하나를 연관관계의 주인으로 지정
2, 연관관계의 주인만이 외래 키를 관리(등록, 관리)
3, 주인이 아닌쪽은 읽기만 가능
4, 주인은 mappedBy 속성 사용X
5, 주인이 아니면 mappedBy 속성을 주인 지정

누구를 주인으로 하는 것이 좋을까?
1, 외래키가 있는 곳을 주인으로 정해라!

설계시에 일단 단방향 매핑을 하고 그 다음 필요하면 양방향 매핑으로!

단방향으로라도 ORM매핑이 다 끝난다고 보면 됨
양방향은 단순하게 조회하기 위하여 필요

