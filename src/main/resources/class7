Spring Data JPA
QueryDSL

*********************스프링 data jpa*************************
지루하게 반복되는 CRUD문제를 세련된 방법으로 해결
개발자는 인터페이스만 작성
스프링 데이터 JPA가 구현 객체를 동적으로 생성해서 주입

JpaRepository<Member,Long> 인터페이스
인터페이스가 인터페이스 상속시에는 extends

인터페이스에 List<Member> findByName(String username);
이렇게만 선언을 해 주면 자기가 알아서 jpql짜서 쿼리 날려줌
<따라서 인터페이스만 짜 주면 됨>

인터페이스 정의
- sort추가, 페이징 추가, @Query사용해서 JPQL사용가능
- 반환타입 지정 가능
- 컨트롤러에서 페이징 처리 객체를 바로 받아올 수 있음
/members?page=0&size=20&sort=name,desc
@RequestMapping(value = "/members", method = RequestMethod.GET)
String list(Pageable pageable, Model model)

스프링 데이터 jpa 메뉴얼 보면 쉽게 따라할 수 있음

****************QueryDSL*************************
SQL, JPQL을 코드로 작성할 수 있도록 도와주는 빌더 API
JPA크리테리아에 비해서 편리하고 실용적
오픈소스

SQL, JPQL => 문자열이라 버그를 컴파일타임에 잡을 수 없음
QueryDSL장점
1, 컴파일 타임에 오류 발견(문자가 아닌 코드로 작성)
2, 코드 자동완성(IDE도움)
3, 단순하고 쉬움 : 코드 모양이 JPQL과 거의 비슷
4, 동적 쿼리<강력한 기능>

반복되는 쿼리문 일부분도 메소드 형태로 만들어서 간단한 형태로 만들 수 있다.


****************************************************
테이블 중심에서 객체 중심으로 개발 패러다임 변화
유연한 데이터베이스 변경의 장점과 테스트
junit통합 테스트시에 H2 DB 메모리 모드
로컬 PC에는 H2 DB 서버 모드로 실행
개발 운영은 MySQL,Oracle
DB서버가 바뀌어도 설정만 바꾸면 해결 가능
테스트, 통합 테스트시에 CRUD는 믿고 간다.

빠른 오류 발견
컴파일 시점
늦어도 애플리케이션 로딩 시점


즉시로딩, n+1문제 주의

생산성 up(단순 코딩 시간 줄어듬)
*비즈니스 로직 작성시 흐름이 끊기지 않음
남은 시간 테스트 작성
...

팀 서버 기술 스택
1, JAVA8
2, SPRING FRAMEWORK
3, JPA,Hibernate
4, Spring Data JPA
5, QueryDSL
6, JUnit, Spock(Test)



